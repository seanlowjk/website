{"version":3,"sources":["components/Header.tsx","components/Introduction.tsx","components/experiences/JobItem.tsx","utils/UserConstants.ts","components/experiences/Experiences.tsx","components/projects/ProjectCard.tsx","components/projects/Projects.tsx","components/contact/SocialButton.tsx","components/contact/Contact.tsx","components/About.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","useState","isOpen","setOpen","closeDropdown","Navbar","variant","bg","expand","expanded","fixed","Nav","Link","style","color","href","Toggle","onClick","aria-controls","Collapse","id","className","Introduction","Jumbotron","Container","src","autoPlay","muted","loop","Button","target","JobItem","props","job","Card","Body","title","role","duration","description","ExperienceItems","ProjectItems","summary","backgroundImageUrl","githubLink","linkText","SocialLinks","buttonColor","icon","faGithub","link","faLinkedin","faTelegram","faEnvelope","Experiences","map","ProjectCard","project","Img","alt","Title","Text","display","flexDirection","Projects","SocialButton","socialLink","background","Contact","About","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4OA2CeA,MAxCf,WAAmB,IAAD,EACUC,oBAAkB,GAD5B,mBACTC,EADS,KACDC,EADC,KAGVC,EAAgB,kBAAMD,GAAQ,IAGpC,OACE,oCACE,kBAACE,EAAA,EAAD,CACEC,QAAQ,QACRC,GAAG,QACHC,OAAO,KACPC,SAAUP,EACVQ,MAAM,OAEN,kBAACC,EAAA,EAAIC,KAAL,CAAUC,MAAO,CAAEC,MAAO,SAAWC,KAAK,aAA1C,YAGA,kBAACV,EAAA,EAAOW,OAAR,CACEC,QAfa,kBAAMd,GAAQ,IAgB3Be,gBAAc,qBAEhB,kBAACb,EAAA,EAAOc,SAAR,CAAiBC,GAAG,oBAClB,kBAACT,EAAA,EAAD,CAAKU,UAAU,WACb,kBAACV,EAAA,EAAIC,KAAL,CAAUG,KAAK,QAAQE,QAASb,GAAhC,QAGA,kBAACO,EAAA,EAAIC,KAAL,CAAUG,KAAK,eAAeE,QAASb,GAAvC,eAGA,kBAACO,EAAA,EAAIC,KAAL,CAAUG,KAAK,YAAYE,QAASb,GAApC,iB,wBCNGkB,MAxBf,WACE,OACE,yBAAKD,UAAU,eAAeD,GAAG,QAC/B,kBAACG,EAAA,EAAD,CAAWF,UAAU,aACnB,kBAACG,EAAA,EAAD,CAAWH,UAAU,kBACnB,2BACEA,UAAU,kBACVI,IAAI,kBACJC,UAAQ,EACRC,OAAK,EACLC,MAAM,IAER,wBAAIP,UAAU,oBAAd,YACA,wBAAIA,UAAU,yBAAd,8BACA,6BACA,kBAACQ,EAAA,EAAD,CAAQvB,QAAQ,gBAAgBS,KAAK,aAAae,OAAO,UAAzD,c,QCOKC,MAjBf,SAAiBC,GAAkB,IACzBC,EAAQD,EAARC,IAER,OACE,oCACE,kBAACC,EAAA,EAAD,CAAMb,UAAU,YACd,kBAACa,EAAA,EAAKC,KAAN,KACE,4BAAKF,EAAIG,OACT,4BAAKH,EAAII,MACT,4BAAKJ,EAAIK,UACT,2BAAIL,EAAIM,iB,gBCVLC,EAAuC,CAClD,CACEJ,MAAO,iBACPC,KAAM,kBACNC,SAAU,sBACVC,YACE,2OAGJ,CACEH,MAAO,YACPC,KAAM,8BACNC,SAAU,sBACVC,YACE,oPAGJ,CACEH,MAAO,yCACPC,KAAM,qBACNC,SAAU,cACVC,YACE,gRAGJ,CACEH,MAAO,uCACPC,KAAM,qBACNC,SAAU,sBACVC,YACE,uPAKOE,EAA8B,CACzC,CACEL,MAAO,iBACPM,QACE,sIAEFC,mBAAoB,oBACpBC,WAAY,oCACZC,SAAU,eAEZ,CACET,MAAO,gBACPM,QACE,mJAEFC,mBAAoB,yBACpBC,WAAY,2CACZC,SAAU,eAEZ,CACET,MAAO,UACPM,QACE,2IAEFC,mBAAoB,qBACpBC,WAAY,iDACZC,SAAU,eAEZ,CACET,MAAO,kCACPM,QACE,kIACFC,mBAAoB,sBACpBC,WAAY,eACZC,SAAU,YAEZ,CACET,MAAO,wBACPM,QACE,iJACFC,mBAAoB,uBACpBC,WAAY,gBACZC,SAAU,aAIDC,EAA4B,CACvC,CACEC,YAAa,UACbC,KAAMC,IACNC,KAAM,gCAER,CACEH,YAAa,UACbC,KAAMG,IACND,KAAM,qCAER,CACEH,YAAa,UACbC,KAAMI,IACNF,KAAM,0BAER,CACEH,YAAa,UACbC,KAAMK,IACNH,KAAM,iCCxFKI,MAff,WACE,OACE,yBAAKjC,UAAU,cAAcD,GAAG,eAC9B,kBAACc,EAAA,EAAD,CAAMb,UAAU,iBACd,kBAACa,EAAA,EAAKlC,OAAN,CAAaqB,UAAU,eAAvB,eACA,yBAAKA,UAAU,aACZmB,EAAgBe,KAAI,SAACtB,GAAD,OACnB,kBAAC,EAAD,CAAKA,IAAKA,WC8BPuB,MAlCf,SAAqBxB,GAA0B,IACrCyB,EAAYzB,EAAZyB,QAER,OACE,oCACE,kBAACvB,EAAA,EAAD,CAAMb,UAAU,4BACd,kBAACa,EAAA,EAAKwB,IAAN,CACEpD,QAAQ,MACRmB,IAAKgC,EAAQd,mBACbgB,IAAKF,EAAQrB,QAEf,kBAACF,EAAA,EAAKC,KAAN,KACE,kBAACD,EAAA,EAAK0B,MAAN,KAAaH,EAAQrB,OACrB,kBAACF,EAAA,EAAK2B,KAAN,KAAYJ,EAAQf,SACpB,yBACE7B,MAAO,CACLiD,QAAS,OACTC,cAAe,WAGjB,kBAAClC,EAAA,EAAD,CACEvB,QAAQ,eACRS,KAAM0C,EAAQb,WACdd,OAAO,UAEN2B,EAAQZ,eCbRmB,MAff,WACE,OACE,yBAAK3C,UAAU,WAAWD,GAAG,YAC3B,kBAACc,EAAA,EAAD,CAAMb,UAAU,qBACd,kBAACa,EAAA,EAAKlC,OAAN,CAAaqB,UAAU,eAAvB,YACA,yBAAKA,UAAU,iBACZoB,EAAac,KAAI,SAACE,GAAD,OAChB,kBAAC,EAAD,CAAaA,QAASA,W,QCiBnBQ,MAnBf,SAAsBjC,GAA2B,IACvCkC,EAAelC,EAAfkC,WAER,OACE,oCACE,kBAACrC,EAAA,EAAD,CACEvB,QAAQ,4BACRO,MAAO,CACLsD,WAAYD,EAAWnB,aAEzBhC,KAAMmD,EAAWhB,KACjBpB,OAAO,UAEP,kBAAC,IAAD,CAAiBkB,KAAMkB,EAAWlB,UCA3BoB,MAlBf,WACE,OACE,6BACE,kBAAClC,EAAA,EAAD,CAAMb,UAAU,WACd,kBAACa,EAAA,EAAKlC,OAAN,mBACA,kBAACkC,EAAA,EAAKC,KAAN,CAAWd,UAAU,gBACnB,yBAAKA,UAAU,gBACZyB,EAAYS,KAAI,SAACW,GAAD,OACf,kBAAC,EAAD,CAAcA,WAAYA,QAG9B,+DCYKG,MAzBf,WACE,OACE,yBAAKhD,UAAU,QAAQD,GAAG,SACxB,kBAACc,EAAA,EAAD,CAAMb,UAAU,mBACd,kBAACa,EAAA,EAAKlC,OAAN,CAAaqB,UAAU,eAAvB,aACA,kBAACa,EAAA,EAAKC,KAAN,CAAWd,UAAU,qBACnB,kBAACa,EAAA,EAAD,CAAMb,UAAU,gBACd,kBAACa,EAAA,EAAKC,KAAN,CAAWd,UAAU,4BACnB,yBACEA,UAAU,cACVI,IAAI,uBACJkC,IAAI,eAJR,kFAQE,6BARF,gDASE,6BATF,+DCWGW,MAbf,WACE,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCJcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.86879e3e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\n\nfunction Header() {\n  const [isOpen, setOpen] = useState<boolean>(false);\n\n  const closeDropdown = () => setOpen(false);\n  const openDropdown = () => setOpen(true);\n\n  return (\n    <>\n      <Navbar\n        variant=\"light\"\n        bg=\"light\"\n        expand=\"lg\"\n        expanded={isOpen}\n        fixed=\"top\"\n      >\n        <Nav.Link style={{ color: \"black\" }} href=\"/website/\">\n          Sean Low\n        </Nav.Link>\n        <Navbar.Toggle\n          onClick={openDropdown}\n          aria-controls=\"basic-navbar-nav\"\n        />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#home\" onClick={closeDropdown}>\n              Home\n            </Nav.Link>\n            <Nav.Link href=\"#experiences\" onClick={closeDropdown}>\n              Experiences\n            </Nav.Link>\n            <Nav.Link href=\"#projects\" onClick={closeDropdown}>\n              Projects\n            </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Button, Container, Jumbotron } from \"react-bootstrap\";\n\nfunction Introduction() {\n  return (\n    <div className=\"Introduction\" id=\"home\">\n      <Jumbotron className=\"main-hero\">\n        <Container className=\"main-container\">\n          <video\n            className=\"container-video\"\n            src=\"images/3241.mp4\"\n            autoPlay\n            muted\n            loop={true}\n          />\n          <h1 className=\"container-header\">Sean Low</h1>\n          <h4 className=\"container-description\"> Full Stack Web Developer </h4>\n          <br />\n          <Button variant=\"outline-light\" href=\"Resume.pdf\" target=\"_blank\">\n            Resume\n          </Button>\n        </Container>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Introduction;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { JobExperienceItem } from \"../../utils/UserTypes\";\n\ntype JobProps = {\n  job: JobExperienceItem;\n};\n\nfunction JobItem(props: JobProps) {\n  const { job } = props;\n\n  return (\n    <>\n      <Card className=\"exp-card\">\n        <Card.Body>\n          <h5>{job.title}</h5>\n          <h6>{job.role}</h6>\n          <h6>{job.duration}</h6>\n          <p>{job.description}</p>\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default JobItem;\n","import { JobExperienceItem, ProjectItem, SocialLink } from \"./UserTypes\";\nimport {\n  faGithub,\n  faLinkedin,\n  faTelegram,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const ExperienceItems: JobExperienceItem[] = [\n  {\n    title: \"Source Academy\",\n    role: \"Research Intern\",\n    duration: \"May 2020 - Jul 2020\",\n    description:\n      \"Worked as a Full-Stack Developer to deliver a gamefied platform for students in CS1101S: Programming Methodology. \" +\n      \"Worked closely with the teaching team to gather user feedback to develop fluid user experience for incoming freshmen.\",\n  },\n  {\n    title: \"NodeFlair\",\n    role: \"Software Engineering Intern\",\n    duration: \"Jan 2020 - Apr 2020\",\n    description:\n      \"Worked as a Full-Stack Developer to deliver features for talents and administrators in a fast-paced tech recruitment market. \" +\n      \"Worked closely with product and engineering teams by running back-end features to deliver smoother user experience.\",\n  },\n  {\n    title: \"NUS CS2030: Programming Methodology II\",\n    role: \"Teaching Assistant\",\n    duration: \"Aug 2019 - \",\n    description:\n      \"Facilitated the teaching of Object-Oriented Programming, Fundamental Software Engineering Principles and Java 11 Streams. \" +\n      \"Marked and went through coding to give feedback to undergraduates to improve general code quality and fundamental software engineering principles.\",\n  },\n  {\n    title: \"NUS CS1101S: Programming Methodology\",\n    role: \"Teaching Assistant\",\n    duration: \"Aug 2019 - Dec 2019\",\n    description:\n      \"Taught basic recursion, lambda calculus and data structures such as lists and binary search trees for 7 Computer Science freshmen. \" +\n      \"Marked and went through coding to give feedback to freshmen to clarify understanding and review basic concepts.\",\n  },\n];\n\nexport const ProjectItems: ProjectItem[] = [\n  {\n    title: \"Project Aether\",\n    summary:\n      \"Aether is a co-op multiplayer adventure game developyed for CS3247: Game Development. \" +\n      \"Developed by a Team of 6 using Unity and GLSL\",\n    backgroundImageUrl: \"images/aether.png\",\n    githubLink: \"https://github.com/Eclmist/Aether\",\n    linkText: \"Github Link\",\n  },\n  {\n    title: \"Drop The Beat\",\n    summary:\n      \"Drop The Beat is a Flutter iOS and Android application built for real-time sharing of\" +\n      \"music by geolocation! Built in a day for Hack n' Roll 2020.\",\n    backgroundImageUrl: \"images/dropthebeat.png\",\n    githubLink: \"https://github.com/seanlowjk/DropTheBeat\",\n    linkText: \"Github Link\",\n  },\n  {\n    title: \"$aveNUS\",\n    summary:\n      \"$aveNUS is a financial planning app for meal planning in NUS. \" +\n      \"This was developed using Java and JavaFX for CS2103T: Software Engineering\",\n    backgroundImageUrl: \"images/saveNUS.png\",\n    githubLink: \"https://github.com/AY1920S1-CS2103T-F13-2/main\",\n    linkText: \"Github Link\",\n  },\n  {\n    title: \"Travelling Salesman Design Task\",\n    summary:\n      \"This project aims to design an interactive calendar to help travelling salesman navigate through cities and his or her meetings\",\n    backgroundImageUrl: \"images/salesman.png\",\n    githubLink: \"Salesman.pdf\",\n    linkText: \"View PDF\",\n  },\n  {\n    title: \"Roommates Design Task\",\n    summary:\n      \"This project aims to design an interactive mobile application to help young adults find roommates and enhance their roommate living experience\",\n    backgroundImageUrl: \"images/roommates.png\",\n    githubLink: \"Roommates.pdf\",\n    linkText: \"View PDF\",\n  },\n];\n\nexport const SocialLinks: SocialLink[] = [\n  {\n    buttonColor: \"#545454\",\n    icon: faGithub,\n    link: \"https://github.com/seanlowjk\",\n  },\n  {\n    buttonColor: \"#0e76a8\",\n    icon: faLinkedin,\n    link: \"https://linkedin.com/in/seanlowjk\",\n  },\n  {\n    buttonColor: \"#0088CC\",\n    icon: faTelegram,\n    link: \"https://t.me/seanlowjk\",\n  },\n  {\n    buttonColor: \"#0072c6\",\n    icon: faEnvelope,\n    link: \"mailto:sean.low.jk@u.nus.edu\",\n  },\n];\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport Job from \"./JobItem\";\nimport { ExperienceItems } from \"../../utils/UserConstants\";\n\nfunction Experiences() {\n  return (\n    <div className=\"Experiences\" id=\"experiences\">\n      <Card className=\"exp-container\">\n        <Card.Header className=\"text-center\">Experiences</Card.Header>\n        <div className=\"exp-cards\">\n          {ExperienceItems.map((job) => (\n            <Job job={job} />\n          ))}\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nexport default Experiences;\n","import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { ProjectItem } from \"../../utils/UserTypes\";\n\ntype ProjectCardProps = {\n  project: ProjectItem;\n};\n\nfunction ProjectCard(props: ProjectCardProps) {\n  const { project } = props;\n\n  return (\n    <>\n      <Card className=\"text-center project-card\">\n        <Card.Img\n          variant=\"top\"\n          src={project.backgroundImageUrl}\n          alt={project.title}\n        />\n        <Card.Body>\n          <Card.Title>{project.title}</Card.Title>\n          <Card.Text>{project.summary}</Card.Text>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n          >\n            <Button\n              variant=\"outline-dark\"\n              href={project.githubLink}\n              target=\"_blank\"\n            >\n              {project.linkText}\n            </Button>\n          </div>\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n\nexport default ProjectCard;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport ProjectCard from \"./ProjectCard\";\nimport { ProjectItems } from \"../../utils/UserConstants\";\n\nfunction Projects() {\n  return (\n    <div className=\"Projects\" id=\"projects\">\n      <Card className=\"project-container\">\n        <Card.Header className=\"text-center\">Projects</Card.Header>\n        <div className=\"project-cards\">\n          {ProjectItems.map((project) => (\n            <ProjectCard project={project} />\n          ))}\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nexport default Projects;\n","import React from \"react\";\n\nimport { Button } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { SocialLink } from \"../../utils/UserTypes\";\n\ntype SocialButtonProps = {\n  socialLink: SocialLink;\n};\n\nfunction SocialButton(props: SocialButtonProps) {\n  const { socialLink } = props;\n\n  return (\n    <>\n      <Button\n        variant=\"outline-light social-card\"\n        style={{\n          background: socialLink.buttonColor,\n        }}\n        href={socialLink.link}\n        target=\"_blank\"\n      >\n        <FontAwesomeIcon icon={socialLink.icon} />\n      </Button>\n    </>\n  );\n}\n\nexport default SocialButton;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { SocialLinks } from \"../../utils/UserConstants\";\nimport SocialButton from \"./SocialButton\";\n\nfunction Contact() {\n  return (\n    <div>\n      <Card className=\"Contact\">\n        <Card.Header>Contact Me</Card.Header>\n        <Card.Body className=\"contact-body\">\n          <div className=\"social-cards\">\n            {SocialLinks.map((socialLink) => (\n              <SocialButton socialLink={socialLink} />\n            ))}\n          </div>\n          <div>(c) Low Jun Kai, Sean 2020</div>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nfunction About() {\n  return (\n    <div className=\"About\" id=\"about\">\n      <Card className=\"about-container\">\n        <Card.Header className=\"text-center\"> About Me</Card.Header>\n        <Card.Body className=\"container-content\">\n          <Card className=\"content-card\">\n            <Card.Body className=\"text-center content-body\">\n              <img\n                className=\"content-img\"\n                src=\"images/seanlowjk.jpg\"\n                alt=\"profilepic\"\n              ></img>\n              I am a Year 3 Computer Science Student at the National University\n              of Singapore.\n              <br />I believe in life-long learning and teaching.\n              <br /> Building and designing is something I love to do too!\n            </Card.Body>\n          </Card>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Introduction from \"./components/Introduction\";\nimport Experiences from \"./components/experiences/Experiences\";\nimport Projects from \"./components/projects/Projects\";\nimport Contact from \"./components/contact/Contact\";\nimport About from \"./components/About\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Introduction />\n      <About />\n      <Experiences />\n      <Projects />\n      <Contact />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}